package com.csye6225.spring2020.courseservice.Resources;

import java.util.Date;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import com.csye6225.spring2020.courseservice.Model.Professor;
import com.csye6225.spring2020.courseservice.Model.Program;
import com.csye6225.spring2020.courseservice.Service.ProfessorService;
import com.csye6225.spring2020.courseservice.Service.ProgramService;

@Path("programs")
public class ProgramResource {

	ProgramService progService = new ProgramService();
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public List<Program> getAllPrograms() {
		return progService.getAllPrograms();
	}	
	
	@GET
	@Path("courses")
	@Produces(MediaType.APPLICATION_JSON)
	public List<Professor> getCoursesByProgram(
			@QueryParam("department") String department) {
		
		if (department == null) {
			return profService.getAllProfessors();
		}
		return profService.getProfessorsByDepartment(department);
		
	}
	
	// ... webapi/professor/1 
	@GET
	@Path("/{professorId}")
	@Produces(MediaType.APPLICATION_JSON)
	public Professor getProfessor(@PathParam("professorId") String profId) {
		System.out.println("Professor Resource: Looking for: " + profId);
		return profService.getProfessor(profId);
	}
	
	@DELETE
	@Path("/{programName}")
	@Produces(MediaType.APPLICATION_JSON)
	public Program deleteProgram(@PathParam("programName") String programName) {
		return progService.deleteProgram(programName);
	}
	
	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public void addProgram(Program prog) {
		    prog.setProgramName(prog.getProgramName());
			progService.addProgram(prog.getProgramName(), prog.getCourses(), prog.getProfessors(), prog.getProgDuration(), prog.getGraduationCredits());
	}
	
	@PUT
	@Path("/{programName}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Program updateProgram(@PathParam("programName") String programName, 
			Program prog) {
		if(Integer.valueOf(programName) <= 0) {
			return null;
		}
		return progService.updateProgramInformattion(programName, prog);
	}

 }

