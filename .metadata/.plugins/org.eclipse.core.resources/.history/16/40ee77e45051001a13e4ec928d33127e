package com.csye6225.spring2020.courseservice.Resources;

import java.util.Date;
import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import com.csye6225.spring2020.courseservice.Model.Student;
import com.csye6225.spring2020.courseservice.Service.StudentService;

@Path("students")
public class StudentResource {

	StudentService studService = new StudentService();
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public List<Student> getAllProfessors() {
		return studService.getAllStudents();
	}	
	
	@GET
	@Path("department")
	@Produces(MediaType.APPLICATION_JSON)
	public List<Student> getStudentsByProgram(
			@QueryParam("program") String program) {
		
		if (program == null) {
			return studService.getAllStudents();
		}
		return studService.getStudentsByProgram(program);
		
	}
	
	// ... webapi/students/1 
	@GET
	@Path("/{studentId}")
	@Produces(MediaType.APPLICATION_JSON)
	public Student getStudent(@PathParam("studentId") String studentId) {
		System.out.println("Student Resource: Looking for: " + studentId);
		return studService.getStudent(studentId);
	}
	
	@DELETE
	@Path("/{studentId}")
	@Produces(MediaType.APPLICATION_JSON)
	public Student deleteProfessor(@PathParam("studentId") long studentId) {
		return studService.deleteStudent(studentId);
	}
	
	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public void addStudent(Student student) {
			student.setStudentId(student.getFirstName()+student.getLastName());
			student.setProgram(student.getProgram());
			student.setEnrolledCourses(student.getEnrolledCourses());
			studService.addStudent(student.getFirstName(), student.getLastName(), student.getProgram(), student.getEnrolledCourses());
	}
	
	@PUT
	@Path("/{studentId}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Student updateStudent(@PathParam("studentId") String studentId, 
			Student student) {
		return studService.updateStudentInformation(studentId, student);
	}
	
	public void addStudent(String firstName, String lastName, String program, List<String> enrolledCourses) {
		studService.addStudent(firstName, lastName, program, enrolledCourses);
	}
 }
